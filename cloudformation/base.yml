# Example of Infrastructure as code
#
# MAPPINGS
Mappings:
  "260036373721":
    us-east-1:
      VpcCidr: 172.16.0.0/17
      Az0PublicSubnet: 172.16.0.0/20
      Az0PrivateSubnet: 172.16.16.0/20
      Az1PublicSubnet: 172.16.32.0/20
      Az1PrivateSubnet: 172.16.48.0/20
      RegUc: US-EAST-1
      RegAbb: use1
    us-west-2:
      VpcCidr: 172.16.128.0/17
      Az0PublicSubnet: 172.16.128.0/20
      Az0PrivateSubnet: 172.16.144.0/20
      Az1PublicSubnet: 172.16.160.0/20
      Az1PrivateSubnet: 172.16.176.0/20
      RegUc: US-WEST-2
      RegAbb: usw2

# RESOURCES
Resources:

# ######################################## VPC

  VpcBase:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", VpcCidr ]
      EnableDnsSupport: True
      EnableDnsHostnames: True
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VPC Test

# ######################################## INTERNET GATEWAY

  VpcIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC Test IGW

  VpcIgwAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VpcBase
      InternetGatewayId: !Ref VpcIgw

# ######################################## SUBNETS

  Az0PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcBase
      CidrBlock: !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", Az0PublicSubnet ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [" ", [ !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", RegUc ], "Public Subnet" ] ]

  Az0PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcBase
      CidrBlock: !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", Az0PrivateSubnet ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [" ", [ !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", RegUc ], "Private Subnet" ] ]

  Az1PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcBase
      CidrBlock: !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", Az1PublicSubnet ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [" ", [ !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", RegUc ], "Public Subnet" ] ]

  Az1PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcBase
      CidrBlock: !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", Az1PrivateSubnet ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [" ", [ !FindInMap [ !Ref "AWS::AccountId", !Ref "AWS::Region", RegUc ], "Private Subnet" ] ]


# ######################################## NAT GATEWAY

  VpcAz0NatGatewayEip:
    Type: AWS::EC2::EIP
    DependsOn: VpcIgwAttach
    Properties:
      Domain: vpc

  VpcAz0NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt VpcAz0NatGatewayEip.AllocationId
      SubnetId: !Ref Az0PublicSubnet
      Tags:
        - Key: Name
          Value: !Join [ " ", [ VPC Test, !Select [ 0, !GetAZs ], NAT Gateway ] ]


# ######################################## ROUTE TABLES

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcBase
      Tags:
      - Key: Name
        Value: VPC Test Public Subnet Route Table

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcBase
      Tags:
      - Key: Name
        Value: VPC Test Private Subnet Route Table

# ######################################## ROUTES

  PublicRouteToIgw:
    Type: AWS::EC2::Route
    DependsOn: VpcIgwAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VpcIgw
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteToNat:
    Type: AWS::EC2::Route
    DependsOn: VpcAz0NatGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VpcAz0NatGateway

# ######################################## SUBNET ASSOCIATIONS

  Az0PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az0PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  Az0PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az0PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  Az1PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az1PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  Az1PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az1PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

# ######################################## REMAINING
# The following are either in the process of being completed or are being mentioned without being completed (to avoid publishing public IP addresses):
# DHCP
# VPC Customer Gateway
# VPC Private Gateway
# VPN Connection and Attachment
# VPN Gateway Route Propagation
# Private Hosted Zone
# VPC Endpoint
# VPC Security Group(s)
# Public key
