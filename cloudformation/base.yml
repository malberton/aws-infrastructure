# Example of Infrastructure as code
# Mark Alberton
#
# MAPPINGS
Mappings:
  "260036373721":
    us-east-1:
      VpcCidr: 172.16.0.0/17
      Az0PublicSubnet: 172.16.0.0/20
      Az0PrivateSubnet: 172.16.16.0/20
      Az1PublicSubnet: 172.16.32.0/20
      Az1PrivateSubnet: 172.16.48.0/20
      RegUc: US-EAST-1
      RegAbb: use1
    us-west-2:
      VpcCidr: 172.16.128.0/17
      Az0PublicSubnet: 172.16.128.0/20
      Az0PrivateSubnet: 172.16.144.0/20
      Az1PublicSubnet: 172.16.160.0/20
      Az1PrivateSubnet: 172.16.176.0/20
      RegUc: US-WEST-2
      RegAbb: usw2

# RESOURCES
Resources:

# ######################################## VPC

  VpcBase:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsSupport: True
      EnableDnsHostnames: False
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VPC Test

# ######################################## SUBNETS

  SubnetPublicAz1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap [SubnetMap, !Ref "AWS::Region", Az1]
      CidrBlock: 172.16.1.0/24
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: Public AZ1
      VpcId: !Ref VpcBase

  SubnetPrivateAz1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap [SubnetMap, !Ref "AWS::Region", Az1]
      CidrBlock: 172.16.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private AZ1
      VpcId: !Ref VpcBase

  SubnetPublicAz2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap [SubnetMap, !Ref "AWS::Region", Az2]
      CidrBlock: 172.16.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Public AZ2
      VpcId: !Ref VpcBase

  SubnetPrivateAz2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap [SubnetMap, !Ref "AWS::Region", Az2]
      CidrBlock: 172.16.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private AZ2
      VpcId: !Ref VpcBase

# ######################################## INTERNET GATEWAY

  Igw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: VPC Test IGW

  IgwAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VpcBase
      InternetGatewayId: !Ref Igw

# ######################################## ROUTE TABLES

  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VpcBase
      Tags:
      - Key: Name
        Value: VPC Test public RT

  RouteTablePrivate:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VpcBase
      Tags:
      - Key: Name
        Value: VPC Test private RT

# ######################################## ROUTES

  RouteTablePublicAddIgw:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw
      RouteTableId: !Ref RouteTablePublic

# ######################################## SUBNET ASSOCIATIONS

  RouteTablePublicAssociateSubnetAz1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublicAz1

  RouteTablePublicAssociateSubnetAz2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublicAz2

  RouteTablePrivateAssociateSubnetAz1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPrivateAz1

  RouteTablePrivateAssociateSubnetAz2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPrivateAz2

# security groups
# acl
# vpn attachments
# network interfaces
# vpc peering
